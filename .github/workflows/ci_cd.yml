name: Docker CI/CD

on:
  push:
    branches: [ main, after-serving-project ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    env:
      HOST: ${{ secrets.HOST }}
      PORT: ${{ secrets.PORT }}
      JWT_TOKEN: ${{ secrets.JWT_TOKEN }}
      mongo_URL: ${{ secrets.MONGO_URL }}
    steps: 
    - 
      name: Check out Repo
      uses: actions/checkout@v2

    - 
      name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
    - 
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      id: buildx
    
    - 
      name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/go-backend:latest

  test:
    runs-on: ubuntu-latest
    env:
      HOST: ${{ secrets.HOST }}
      PORT: ${{ secrets.PORT }}
      mongo_URL: ${{ secrets.MONGO_URL }}
      JWT_TOKEN: ${{ secrets.JWT_TOKEN }}
      username: ${{ secrets.DOCKER_HUB_USERNAME }}
      password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Go unit testing
        run: |
          cd server 
          go build -o run-server
          ./run-server &
          go test
  


 
  deplyoment:
      runs-on: ubuntu-latest
      env:
        HOST: ${{ secrets.HOST }}
        PORT: ${{ secrets.PORT }}
        mongo_URL: ${{ secrets.MONGO_URL }}
        JWT_TOKEN: ${{ secrets.JWT_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      steps:
      -
        name: Check out Repo
        uses: actions/checkout@v2
     
      - 
        name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - 
        name: Terraform format
        id: fmt
        run: |
          cd terraform
          terraform fmt -check
          
      - 
        name: Terraform init
        id: init
        run: |
          cd terraform
          terraform init -backend-config="key=${AWS_ACCESS_KEY_ID}"

      - 
        name: Terraform validate
        id: validate
        run: |
          cd terraform
          terraform validate -no-color
      - 
        name: Terraform plan
        id: plan
        run: |
          cd terraform
          terraform plan -no-color
      - 
        name: Terraform apply
        id: apply
        run: |
          cd terraform
          terraform apply -auto-approve

    


  